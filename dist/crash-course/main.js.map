{"version":3,"sources":["./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/button/button.component.ts","./src/app/components/button/button.component.html","./src/environments/environment.ts","./src/app/components/tasks/tasks.component.html","./src/app/components/tasks/tasks.component.ts","./src/app/components/task-item/task-item.component.ts","./src/app/components/task-item/task-item.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/ui.service.ts","./src/app/app.module.ts","./src/app/components/add-task/add-task.component.ts","./src/app/components/add-task/add-task.component.html","./src/app/services/task.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {UiService} from '../../services/ui.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  title:string = 'Task Tracker';\n  showAddTask: boolean = false;\n  subscription: Subscription;\n\n  constructor( private uiService: UiService) {\n      this.subscription = this.uiService\n        .onToggle()\n        .subscribe(value => this.showAddTask = value)\n  }\n\n  ngOnInit(): void {\n  }\n\n  toggleAddTask() {\n    this.uiService.toggleAddTask()\n  }\n\n}\n","<header>\n  <h1>{{ title }}</h1>\n  <app-button\n    color=\"{{ showAddTask ? 'red' : 'green' }}\"\n    text=\"{{ showAddTask ? 'Close' : 'Add' }}\"\n    (btnClick)=\"toggleAddTask()\"\n  ></app-button>\n</header>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.css']\n})\nexport class ButtonComponent implements OnInit {\n  @Input() text: string;\n  @Input() color: string;\n  @Output() btnClick = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onClick() {\n    this.btnClick.emit()\n  }\n\n}\n","<button\n  [ngStyle]=\"{ 'background-color': color }\"\n  class=\"btn\"\n  (click)=\"onClick()\"\n>\n  {{ text }}\n</button>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<app-add-task (onAddTask)=\"addTask($event)\"></app-add-task>\n<app-task-item\n  *ngFor=\"let task of tasks\"\n  [task]=\"task\"\n  (onDeleteTask)=\"deleteTask(task)\"\n  (onToggleReminder)=\"toggleReminder(task)\"\n></app-task-item>\n","import { Component, OnInit } from '@angular/core';\nimport {TaskService} from '../../services/task.service'\nimport {Task} from '../../Task';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n    tasks: Task[] = [];\n\n\n  constructor(private taskService: TaskService) {\n\n  }\n\n  ngOnInit(): void {\n      this.taskService.getTasks().subscribe((tasks) => {\n          this.tasks = tasks\n      })\n  }\n\n  deleteTask(task: Task) {\n      this.taskService.deleteTask(task).subscribe( () => {\n          this.tasks = this.tasks.filter(t => t.id !== task.id)\n      })\n  }\n\n  toggleReminder(task:Task) {\n    task.reminder = !task.reminder\n    this.taskService.updateTaskReminder(task).subscribe()\n  }\n\n  addTask(task:Task) {\n    this.taskService.addTask(task).subscribe(task => this.tasks.push(task));\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { Task } from '../../Task';\n\n@Component({\n  selector: 'app-task-item',\n  templateUrl: './task-item.component.html',\n  styleUrls: ['./task-item.component.css']\n})\nexport class TaskItemComponent implements OnInit {\n    @Input() task: Task;\n    @Output() onDeleteTask: EventEmitter<Task> = new EventEmitter();\n    @Output() onToggleReminder: EventEmitter<Task> = new EventEmitter();\n    faTimes = faTimes;\n\n    constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  onDelete(task) {\n      this.onDeleteTask.emit(task)\n  }\n\n  onToggle(task) {\n    this.onToggleReminder.emit(task);\n  }\n\n}\n","<div\n  class=\"task\"\n  [ngClass]=\"{ reminder: task.reminder }\"\n  (dblclick)=\"onToggle(task)\"\n>\n  <h3>\n    {{ task.text }}\n    <fa-icon\n      [icon]=\"faTimes\"\n      [ngStyle]=\"{ color: 'red' }\"\n      (click)=\"onDelete(task)\"\n    ></fa-icon>\n  </h3>\n\n  <p>{{ task.day }}</p>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  \n}\n","<div class=\"container\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n    private showAddTask: boolean = false;\n    private subject = new Subject<any>();\n  \n    constructor() { }\n\n    toggleAddTask():void {\n        this.showAddTask = !this.showAddTask;\n        this.subject.next(this.showAddTask);\n    }\n\n    onToggle():Observable<any> {\n        return this.subject.asObservable();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule, enableDebugTools } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms/';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { TasksComponent } from './components/tasks/tasks.component';\nimport { TaskItemComponent } from './components/task-item/task-item.component';\nimport { AddTaskComponent } from './components/add-task/add-task.component';\n\nconst appRoutes: Routes = [\n    {\n        path: '',\n        component: TasksComponent\n    }\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    ButtonComponent,\n    TasksComponent,\n    TaskItemComponent,\n    AddTaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    FontAwesomeModule,\n    HttpClientModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes, {enableTracing: true})\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport {Task} from '../../Task';\nimport { Subscription } from 'rxjs';\nimport { UiService } from '../../services/ui.service';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css']\n})\nexport class AddTaskComponent implements OnInit {\n    @Output() onAddTask: EventEmitter<Task> = new EventEmitter();\n\n    text: string\n    day: string\n    reminder: boolean = false;\n    showAddTask: boolean;\n    subscription: Subscription;\n\n  constructor( private uiService: UiService ) {\n    this.subscription = this.uiService\n        .onToggle()\n        .subscribe(value => this.showAddTask = value)\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n      if (!this.text) {\n          alert('Please add a task.')\n          return;\n      }\n\n      const newTask = {\n          text: this.text,\n          day: this.day,\n          reminder: this.reminder\n      }\n      \n      this.onAddTask.emit(newTask);\n\n      this.text = '';\n      this.day = '';\n      this.reminder = false;\n  }\n\n}\n","<form *ngIf=\"showAddTask\" class=\"add-form\" (ngSubmit)=\"onSubmit()\">\n  <div class=\"form-control\">\n    <label for=\"text\">Task</label>\n    <input\n      type=\"text\"\n      name=\"text\"\n      id=\"text\"\n      placeholder=\"Add Task\"\n      [(ngModel)]=\"text\"\n    />\n  </div>\n  <div class=\"form-control\">\n    <label for=\"day\">Day</label>\n    <input\n      type=\"text\"\n      name=\"day\"\n      id=\"day\"\n      placeholder=\"Add Day & Time\"\n      [(ngModel)]=\"day\"\n    />\n  </div>\n  <div class=\"form-control form-control-check\">\n    <label for=\"reminder\">Set Reminder</label>\n    <input\n      type=\"checkbox\"\n      name=\"reminder\"\n      id=\"reminder\"\n      [(ngModel)]=\"reminder\"\n    />\n  </div>\n  <input type=\"submit\" value=\"Save Task\" class=\"btn btn-block\" />\n</form>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task } from '../Task';\n\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TaskService {\n    private apiUrl = 'http://localhost:5000/tasks'\n\n  constructor(private http:HttpClient) { }\n\n  getTasks(): Observable<Task[]> {\n      return this.http.get<Task[]>(this.apiUrl)\n  }\n\n  deleteTask(task:Task):Observable<Task> {\n      const url = `${this.apiUrl}/${task.id}`\n      return this.http.delete<Task>(url);\n  }\n\n  updateTaskReminder(task:Task):Observable<Task> {\n      const url = `${this.apiUrl}/${task.id}`;\n      return this.http.put<Task>(url, task, httpOptions);\n  }\n\n  addTask(task:Task): Observable<Task> {\n      return this.http.post<Task>(this.apiUrl, task, httpOptions)\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}